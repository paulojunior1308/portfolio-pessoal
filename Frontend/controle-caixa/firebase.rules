rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar se o usuário está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }

    // Função para validar acesso via token
    function hasValidToken(projectId) {
      let requestToken = request.query.token;
      return exists(/databases/$(database)/documents/projects/$(projectId)) &&
             get(/databases/$(database)/documents/projects/$(projectId)).data.shareToken == requestToken;
    }

    // Regras para a coleção de pesquisadores
    match /researchers/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Regras para a coleção de projetos
    match /projects/{projectId} {
      allow read: if isAuthenticated() || hasValidToken(projectId);
      allow write: if isAuthenticated();
    }

    // Regras para a coleção de despesas
    match /expenses/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Regras para a coleção de contratos
    match /contracts/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
} 